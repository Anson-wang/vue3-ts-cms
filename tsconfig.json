{
  "compilerOptions": {
    // 目标代码 ts => js(es5/6/7)
    "target": "esnext",
    // 目标代码使用的模块化方案（commonJS require/module.exports/es module import/export）
    "module": "esnext",
    // 严格模式
    "strict": true,
    // 对jsx做怎么样的处理
    "jsx": "preserve",
    // 辅助导入功能
    "importHelpers": true,
    // 按照node的模式解析模块 import
    "moduleResolution": "node",
    // 跳过对一些库的类型检测(axios -> 类型)
    "skipLibCheck": true,
    // export default /module.export= {}
    // es module 和 commonjs 混合使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    // 要不要生成映射文件（ts-> js）
    "sourceMap": true,
    // 文件路径解析时，基本url
    "baseUrl": ".",
    // 指定具体解析使用的类型
    "types": ["webpack-env"],
    // 路径解析(类似于webpack alias)  @/components -> src/components
    "paths": {
      "@/*": ["src/*"]
    },
    // 在项目中可以使用哪些库中的类型（Proxy/Window/Document）
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  // 哪些文件需要tsconfig做约束/解析
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  // 排除哪些文件
  "exclude": ["node_modules"]
}
